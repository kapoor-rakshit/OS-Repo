chmod is used to change the permissions of files or directories.
The file's owner or root can change permissions i.e. can run "chmod" command.

        Syntax     :                       chmod options permissions filename

permissions defines the permissions for the owner of the file (the "user"), members of the group who owns the file (the "group"), and anyone else ("others"). 
There are two ways to represent these permissions: with symbols (alphanumeric characters), or with octal numbers (the digits 0 through 7).

       Eg          :                     chmod u=rwx,g=rx,o=r myfile
                                         chmod a=rwx myfile
                                         chmod o-wx,g-wx myfile

This is an example of using symbolic permissions notation. 
The letters u, g, o, a stand for "user", "group", "other", "all".
If none of u, g, o, a are given , it is considered as "a" (all).
The user currently logged in acts as "user".
The default "group" for a user is specified in the file /etc/passwd

The plus sign ("+") means "Add access".
The minus sign ("-") means "Remove access".
The equals sign ("=") means "set the permissions exactly like this".

The letters "r", "w", and "x" stand for "read", "write", and "execute", respectively.
"Read"    -->   Able To Read Folder/File Contents.
"Write"   -->   Edit folder/file data, delete or create new files/folders inside it.
"Execute" -->   Enter that folder or run if it is script file but not be able to read it's contents, see what files/content are located there.
The commas separate the different classes of permissions, and there are no spaces in between them.

      Eg           :                     chmod 754 myfile

Here the digits 7, 5, and 4 each individually represent the permissions for the user, group, and others, in that order. 
Each digit is a combination of the numbers 4, 2, 1, and 0:
4 stands for "read",
2 stands for "write",
1 stands for "execute", and
0 stands for "no permission."
So 7 is the combination of permissions 4+2+1 (read, write, and execute), 5 is 4+0+1 (read, no write, and execute), and 4 is 4+0+0 (read, no write, and no execute).

chmod -R 754 dirname                      // -R : recursively change permissions for all files in dir

chown newuser file1,file2                 //"change owner" and is used to change the owner of a file.
chown -R newuser dirname                 // -R : "change owner" to newuser for entire dir


chgrp newgroup filelist                  //"change group" and is used to change the group of a file.
chgrp -R newgroup dirname                // -R : "change group" to newgroup for entire dir

        
            // umask is used set default permissions to a new file created
umask                                     // returns default permissions of new file that are not allowed , eg : 0022
                                          // so allowed permissions are 777 - 022 = 755
                                          
umask -S                                  // returns allowed permissions u=rwx,g=rx,o=rx

umask 0033                               // sets permissions to be denied
                                         // first 0 is for octal and other three char gives owner, group, others perm denial
                                         
                                         
